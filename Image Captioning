import tensorflow as tf
from tensorflow.keras import layers, Model
from tensorflow.keras.applications import ResNet50
from tensorflow.keras.preprocessing.image import load_img, img_to_array
from tensorflow.keras.preprocessing.sequence import pad_sequences
from tensorflow.keras.utils import to_categorical
import numpy as np

# Load pre-trained ResNet50 model without top layer
base_model = ResNet50(weights='imagenet', include_top=False)

# Function to extract features from image using ResNet50
def extract_features(image_path):
    img = load_img(image_path, target_size=(224, 224))
    img_array = img_to_array(img)
    img_array = np.expand_dims(img_array, axis=0)
    img_array = tf.keras.applications.resnet50.preprocess_input(img_array)
    features = base_model.predict(img_array)
    features = features.reshape((-1,))
    return features

# Dummy function to get caption from feature vector (replace with actual captioning model)
def generate_caption(feature_vector):
    return "A person riding a horse."

# Example usage
image_path = 'example.jpg'
image_features = extract_features(image_path)
caption = generate_caption(image_features)
print(f"Generated Caption: {caption}")
